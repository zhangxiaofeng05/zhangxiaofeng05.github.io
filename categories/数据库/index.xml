<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on Welcome</title>
    <link>https://lionng.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Aug 2019 09:31:27 +0800</lastBuildDate><atom:link href="https://lionng.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mysql高级排序</title>
      <link>https://lionng.github.io/post/mysql-sort/</link>
      <pubDate>Sat, 17 Aug 2019 09:31:27 +0800</pubDate>
      
      <guid>https://lionng.github.io/post/mysql-sort/</guid>
      <description>表和数据 1 2 3 4 5 6 7 8 9 10 CREATETABLE`sqltest`(`id`int(11)NOTNULL,`name`varchar(45</description>
    </item>
    
    <item>
      <title>数据库隔离级别和传播行为</title>
      <link>https://lionng.github.io/post/transaction-spring/</link>
      <pubDate>Thu, 18 Jul 2019 12:56:44 +0800</pubDate>
      
      <guid>https://lionng.github.io/post/transaction-spring/</guid>
      <description>事务五个隔离级别 DEFAULT 使用数据库设置的隔离级别 ( 默认 ) ，由 DBA 默认的设置来决定隔离级别 . READ_UNCOMMITTED 会出现脏读、不可重复读、幻读 ( 隔离级别最低，并发性能高 )</description>
    </item>
    
    <item>
      <title>悲观锁和乐观锁</title>
      <link>https://lionng.github.io/post/pessimistic-lock-and-optimistic-lock/</link>
      <pubDate>Wed, 17 Jul 2019 23:09:21 +0800</pubDate>
      
      <guid>https://lionng.github.io/post/pessimistic-lock-and-optimistic-lock/</guid>
      <description>悲观锁和乐观锁：处理的是同一张表的同一行记录 悲观锁 如果使用了(加了一个行锁)，如果事务没有被释放，就会造成其他事务处于等待。 使用数据库提供的</description>
    </item>
    
  </channel>
</rss>
